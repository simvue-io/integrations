"""
OpenFOAM Connector Example
========================
This is an example of the OpenfoamRun Connector class.

The OpenFOAM simulation used here simulates a the air flow around a 2D airfoil.

To run this example with Docker:
    - Pull the OpenFOAM image: docker run -it ghcr.io/simvue-io/openfoam_example
    - Clone this repository: git clone https://github.com/simvue-io/integrations.git
    - Move into OpenFOAM examples directory: cd integrations/examples/openfoam
    - Create a simvue.toml file, copying in your information from the Simvue server: vi simvue.toml
    - Install Poetry: pip install poetry
    - Install required modules: poetry install
    - Run the example script: poetry run python openfoam_example.py

To run this example on your own system with Openfoam installed:
    - Ensure that you have OpenFOAM installed on your system
    - Move into OpenFOAM examples directory: cd integrations/examples/openfoam
    - Create a simvue.toml file, copying in your information from the Simvue server: vi simvue.toml
    - Install Poetry: pip install poetry
    - Install required modules: poetry install
    - Run the example script: poetry run python openfoam_example.py
    
For a more in depth example, see: https://docs.simvue.io/examples/openfoam/

"""

import pathlib
import subprocess
import uuid
from simvue_integrations.connectors.openfoam import OpenfoamRun

def openfoam_example(run_folder, offline=False):
    
    # Delete local copies of results generated by previous runs
    subprocess.run(["/bin/sh", str(pathlib.Path(__file__).parent.joinpath("airFoil2D", "Allclean"))])
        
    # Initialise the OpenFOAM class as a context manager
    with OpenfoamRun(mode="offline" if offline else "online") as run:
        # Initialise the run, providing a name for the run, and optionally extra information such as a folder, description, tags etc
        run.init(
            name="openfoam_simulation_airfoil-%s" % str(uuid.uuid4()),
            description="An example of using the OpenfoamRun Connector to track an OpenFOAM simulation.",
            folder=run_folder,
            tags=["openfoam", "airfoil"],
        )

        # You can use any of the Simvue Run() methods to upload extra information before/after the simulation
        run.create_metric_threshold_alert(
            name='ux_residuals_too_high',
            metric='residuals.initial.Ux',
            rule='is above',
            threshold=0.1,
            frequency=1,
            window=1,
            )
                
        # Then call the .launch() method to start your OpenFOAM simulation, providing the path to the case directory which contains an Allrun file
        run.launch(
            openfoam_case_dir=pathlib.Path(__file__).parent.joinpath("airFoil2D"),
        )

        # Once the simulation is complete, you can upload any final items to the Simvue run before it closes
        run.log_event("Deleting local copies of results...")
        
        return run.id
    
    
if __name__ == "__main__":
    openfoam_example("/openfoam_example")
